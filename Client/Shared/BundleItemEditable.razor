@using BlazorApp.Shared

@inject StateContainer StateContainer

<div class="link-outer">
  <div class="link-wrapper">
    <div class="columns is-vcentered is-mobile">
      <div class="column is-narrow">
        <span class="icon is-medium has-text-grey drag-handle">
          <i class="fas fa-lg fa-grip-vertical"></i>
        </span>
      </div>
      <div class="card link">
        <div class="column">
          <div class="columns is-vcentered">
            <div class="column is-narrow is-hidden-mobile">
              <figure class="link-image">
                <img width="64" height="64" class="is-64x64"
                  src="@(string.IsNullOrEmpty(newLink.Image) ? "/images/no-image.png" : newLink.Image)"
                  alt="@(newLink.Title)" />
              </figure>
            </div>
            <div class="column link-details">
              <div class="columns is-mobile is-multiline is-gapless">
                <div class="column is-narrow is-hidden-tablet">
                  <figure class="link-image link-image-little">
                    <img width="24" height="24" class="is-24x24"
                      src="@(string.IsNullOrEmpty(newLink.Image) ? "/images/no-image.png" : newLink.Image)"
                      alt="@newLink.Title" />
                  </figure>
                </div>
                <div class="column">
                  <input type="text" :placeholder="editable ? 'Enter a title' : ''"
                    class="has-text-weight-bold link-title input has-text-weight-medium" value="@newLink.Title" />
                </div>
                <div class="column is-full">
                  <textarea :placeholder="editable ? 'Enter a description' : ''"
                    class="link-description textarea has-fixed-size is-size-7" value="@newLink.Description">
                  </textarea>
                  <input disabled="disabled" value="@newLink.Url" class="link-url" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="column is-narrow" v-if="editable">
        <div class="columns is-vcentered">
          <div class="column">
            <span class="has-text-bold link-delete has-text-grey is-clickable"
              @onclick="() => OnDeleteLink.InvokeAsync(newLink)">
              <span class="icon is-medium">
                <i class="fas fa-lg fa-times"></i>
              </span>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@code {
  [Parameter]
  public Link newLink { get; set; } = new Link();

  [Parameter]
  public EventCallback<Link> OnDeleteLink { get; set; }

}