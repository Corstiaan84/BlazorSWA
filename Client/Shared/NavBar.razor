@using BlazorApp.Shared

@inject StateContainer StateContainer
@inject NavigationManager NavigationManager


<header id="navbar" class="header">
  <nav class="navbar container" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <a class="navbar-item" href="/">
        <img width="100" height="60" src="/images/logo-beta.svg" alt="urlist logo" />
      </a>
      <a id="hamburger" role="button" class="beta-bump navbar-burger burger @(showMenu ? "is-active" : "")"
        aria-label="menu" aria-expanded="false" data-target="navbarBasicExample" @onclick="@ToggleMenu">
        <img src="images/burger.svg" alt="toggle menu" width="60" height="60" />
      </a>
    </div>
    <div class="beta-bump navbar-menu @(showMenu ? "is-active" : "")">
      <div class="navbar-start">
        <a class="navbar-item" @onclick="NewList">
          <span class="icon is-large navbar-icon">
            <i class="fas fa-lg fa-plus-circle"></i>
          </span>
          New
        </a>
        @if (loggedIn)
        {
          <a class="navbar-item" to="/s/user">
            <span class="icon is-large navbar-icon">
              <i class="fas fa-lg fa-user-circle"></i>
            </span>
            My Lists
          </a>
        }
        <a href="https://aka.ms/theurlist" class="navbar-item" target="_new">
          <span class="icon is-large navbar-icon">
            <i class="fas fa-lg fa-question-circle"></i>
          </span>
          About
        </a>
      </div>
      <div class="navbar-end">
        @if (loggedIn)
        {
          <div class="navbar-item has-dropdown is-hoverable">
            <a class="navbar-link">
              <div class="columns is-gapless is-mobile is-vcentered">
                <div class="column is-narrow">
                  <span class="icon is-large" title="@StateContainer.User?.ClientPrincipal?.UserDetails">
                    <i class="@($"is-size-4 fab fa-{StateContainer.User?.ClientPrincipal?.IdentityProvider}")"></i>
                  </span>
                </div>
                <div class="column">
                  <span>@StateContainer.User?.ClientPrincipal?.UserDetails</span>
                </div>
              </div>
            </a>
            <div class="navbar-dropdown">
              <a class="navbar-item" href="@($"/.auth/logout")">
                <span class="icon is-medium navbar-icon">
                  <i class="fas fa-sign-out-alt"></i>
                </span>
                Log Out
              </a>
            </div>
          </div>
        }
        else
        {
          <a class="navbar-item" @onclick="ToggleModal">
            <span class="icon is-large navbar-icon">
              <i class="fas fa-lg fa-sign-in-alt"></i>
            </span>
            Login
          </a>
        }
      </div>
    </div>
  </nav>
  <ModalLogin isOpen="showLoginModal" closeModal="ToggleModal"></ModalLogin>
</header>

@code {

  [Parameter]
  public bool loggedIn { get; set; }

  private bool showMenu = false;

  private bool showLoginModal = false;

  private void NewList()
  {
    StateContainer.LinkBundle = new LinkBundle();
    NavigationManager.NavigateTo("/s/edit");
  }
  private void ToggleMenu()
  {
    showMenu = !showMenu;
  }

  private void ToggleModal()
  {
    showLoginModal = !showLoginModal;
    Console.WriteLine($"showLoginModal: {showLoginModal}");
  }
}
