@page "/s/edit"
@using BlazorApp.Shared

@inject StateContainer StateContainer
@inject HttpClient Http

<ListDetails></ListDetails>
<div class="container main content">
  <NewLink OnNewLinkAdded="@NewLinkAdded"></NewLink>
  @if (StateContainer.LinkBundle.Links.Count != 0)
  {
    <div id="linkHeader" class="columns is-mobile is-vcentered is-gapless">
      <div class="column">
        <h3 class="has-text-primary is-size-3 has-text-weight-medium">
          Links
        </h3>
      </div>
      <div class="column">
        <span class="is-pulled-right">Drag links to re-order</span>
      </div>
    </div>
    @* <LinkBundleItems></LinkBundleItems> *@
    <SortableList Items="@StateContainer.LinkBundle.Links" Context="link">
      <SortableItem>
        <BundleItemEditable newLink="@link" OnDeleteLink="@DeleteLink"></BundleItemEditable>
      </SortableItem>
    </SortableList>
    <button id="deleteButton" v-if="currentList.links.length > 0 && listIsPublished"
      class="button is-large is-danger has-text-white is-fullwidth" @onclick="ResetLinkBundle">
      Delete This List
    </button>
  }
</div>

@code {

  protected override void OnInitialized()
  {
    // if the linkbundle is already published and there is no user, reset the link bundle
    if (StateContainer.LinkBundle.IsPublished && StateContainer.User == null)
    {
      ResetLinkBundle();
    }
  }

  private void NewLinkAdded(Link link)
  {
    StateContainer.AddLinkToBundle(link);

    // Update the link from the ogpinfo endpoint
    //await UpdateLink(link);
  }

  private async Task UpdateLink(Link link)
  {
    var response = await Http.PostAsJsonAsync("/api/ogpinfo", link);
    var updatedLink = await response.Content.ReadFromJsonAsync<Link>();

    // If the request fails just return
    if (updatedLink != null)
    {
    link.Title = updatedLink.Title;
    link.Description = updatedLink.Description;
    link.Image = updatedLink.Image;
    }
  }

  private void ResetLinkBundle()
  {
    StateContainer.LinkBundle = new LinkBundle();
  }

  private void DeleteLink(Link link)
  {
    StateContainer.DeleteLinkFromBundle(link);
  }
}
